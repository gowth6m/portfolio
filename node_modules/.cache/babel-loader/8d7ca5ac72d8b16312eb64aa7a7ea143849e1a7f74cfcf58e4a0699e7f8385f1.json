{"ast":null,"code":"var _jsxFileName = \"/Users/gowtham/Documents/GitHub/myportfolio/src/components/portfolio/Portfolio.tsx\",\n  _s = $RefreshSig$();\nimport \"./Portfolio.css\";\nimport PortfolioItem from \"./PortfolioItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Portfolio() {\n  _s();\n  let items = [];\n  let filters = [\"All\", \"Web\", \"Mobile\", \"Game\", \"Other\"];\n  const [currentFilter, setCount] = useState(0);\n  for (let i = 0; i < 10; i++) {\n    items.push(new PortfolioItem(i, \"item \" + i, \"description\", \"imageUrl\", \"link\", [\"Web\", \"Game\"]));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"portfolio-page flex\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portfolio-page-container screen-max\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"portfolio-title section-title\",\n        children: [\"Portfolio \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters-container flex\",\n        children: filters.map(filter => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filters-item\",\n          onClick: () => {\n            console.log(filter);\n          },\n          children: filter\n        }, filter, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), items.filter(item => {\n        var _item$filters;\n        return (_item$filters = item.filters) === null || _item$filters === void 0 ? void 0 : _item$filters.includes(\"All\");\n      }).map(item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"portfolio-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"portfolio-item-image\",\n            children: item.display()\n          }, item.title, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)\n        }, item.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(Portfolio, \"H70dDlul6Y9q2wg5bzNDZ3A2QL8=\");\n_c = Portfolio;\nvar _c;\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"names":["PortfolioItem","Portfolio","items","filters","currentFilter","setCount","useState","i","push","map","filter","console","log","item","includes","display","title","key"],"sources":["/Users/gowtham/Documents/GitHub/myportfolio/src/components/portfolio/Portfolio.tsx"],"sourcesContent":["import \"./Portfolio.css\";\nimport PortfolioItem from \"./PortfolioItem\";\n\nexport function Portfolio() {\n  let items: PortfolioItem[] = [];\n  let filters: string[] = [\"All\", \"Web\", \"Mobile\", \"Game\", \"Other\"];\n  const [currentFilter, setCount] = useState(0);\n\n  for (let i = 0; i < 10; i++) {\n    items.push(\n      new PortfolioItem(i, \"item \" + i, \"description\", \"imageUrl\", \"link\", [\n        \"Web\",\n        \"Game\",\n      ])\n    );\n  }\n\n  return (\n    <div className=\"portfolio-page flex\">\n      <div className=\"portfolio-page-container screen-max\">\n        <div className=\"portfolio-title section-title\">\n          Portfolio <span>.</span>\n        </div>\n\n        <div className=\"filters-container flex\">\n          {filters.map((filter) => (\n            <div\n              key={filter}\n              className=\"filters-item\"\n              onClick={() => {\n                console.log(filter);\n              }}\n            >\n              {filter}\n            </div>\n          ))}\n        </div>\n\n        {/* rest of the stuff */}\n\n        {items\n          .filter((item) => item.filters?.includes(\"All\"))\n          .map((item) => {\n            return (\n              <div key={item.key} className=\"portfolio-item\">\n                <div key={item.title} className=\"portfolio-item-image\">\n                  {item.display()}\n                </div>\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAO,iBAAiB;AACxB,OAAOA,aAAa,MAAM,iBAAiB;AAAC;AAE5C,OAAO,SAASC,SAAS,GAAG;EAAA;EAC1B,IAAIC,KAAsB,GAAG,EAAE;EAC/B,IAAIC,OAAiB,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC;EACjE,MAAM,CAACC,aAAa,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,CAAC,CAAC;EAE7C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC3BL,KAAK,CAACM,IAAI,CACR,IAAIR,aAAa,CAACO,CAAC,EAAE,OAAO,GAAGA,CAAC,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,EAAE,CACnE,KAAK,EACL,MAAM,CACP,CAAC,CACH;EACH;EAEA,oBACE;IAAK,SAAS,EAAC,qBAAqB;IAAA,uBAClC;MAAK,SAAS,EAAC,qCAAqC;MAAA,wBAClD;QAAK,SAAS,EAAC,+BAA+B;QAAA,sCAClC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAc;MAAA;QAAA;QAAA;QAAA;MAAA,QACpB,eAEN;QAAK,SAAS,EAAC,wBAAwB;QAAA,UACpCJ,OAAO,CAACM,GAAG,CAAEC,MAAM,iBAClB;UAEE,SAAS,EAAC,cAAc;UACxB,OAAO,EAAE,MAAM;YACbC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;UACrB,CAAE;UAAA,UAEDA;QAAM,GANFA,MAAM;UAAA;UAAA;UAAA;QAAA,QAQd;MAAC;QAAA;QAAA;QAAA;MAAA,QACE,EAILR,KAAK,CACHQ,MAAM,CAAEG,IAAI;QAAA;QAAA,wBAAKA,IAAI,CAACV,OAAO,kDAAZ,cAAcW,QAAQ,CAAC,KAAK,CAAC;MAAA,EAAC,CAC/CL,GAAG,CAAEI,IAAI,IAAK;QACb,oBACE;UAAoB,SAAS,EAAC,gBAAgB;UAAA,uBAC5C;YAAsB,SAAS,EAAC,sBAAsB;YAAA,UACnDA,IAAI,CAACE,OAAO;UAAE,GADPF,IAAI,CAACG,KAAK;YAAA;YAAA;YAAA;UAAA;QAEd,GAHEH,IAAI,CAACI,GAAG;UAAA;UAAA;UAAA;QAAA,QAIZ;MAEV,CAAC,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA;EACA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAnDehB,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}