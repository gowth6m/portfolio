{"ast":null,"code":"var _jsxFileName = \"/Users/gowtham/Documents/GitHub/myportfolio/src/components/portfolio/PortfolioItem.tsx\",\n  _s = $RefreshSig$();\nimport \"./PortfolioItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function FilterItem(_ref) {\n  _s();\n  let {\n    title,\n    initialClicked,\n    setCurrentFilter,\n    currentFilter\n  } = _ref;\n  const [isClicked, setIsClicked] = useState(initialClicked);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isClicked && currentFilter === title ? \"filters-item filters-item-active\" : \"filters-item\",\n    onClick: () => {\n      setCurrentFilter(title);\n      if (currentFilter !== title) {\n        setIsClicked(false);\n      }\n      setIsClicked(true);\n    },\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(FilterItem, \"W4oBxlGFFpvkg4Yw+sKjvSh8hho=\");\n_c = FilterItem;\nclass PortfolioItem {\n  constructor(title, description, imageUrl, link, filters) {\n    this.title = void 0;\n    this.description = void 0;\n    this.imageUrl = void 0;\n    this.link = void 0;\n    this.filters = void 0;\n    this.title = title;\n    this.description = description;\n    this.imageUrl = imageUrl;\n    this.link = link;\n    this.filters = [\"all\", ...filters]; // forcing it to have 'all' filter\n  }\n\n  render(key) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portfolio-item-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"portfolio-item-background\",\n        alt: \"portfolioItemImg\",\n        src: process.env.PUBLIC_URL + \"/assets/portfolio_assets/\" + this.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default PortfolioItem;\nvar _c;\n$RefreshReg$(_c, \"FilterItem\");","map":{"version":3,"names":["FilterItem","title","initialClicked","setCurrentFilter","currentFilter","isClicked","setIsClicked","useState","PortfolioItem","constructor","description","imageUrl","link","filters","render","key","process","env","PUBLIC_URL"],"sources":["/Users/gowtham/Documents/GitHub/myportfolio/src/components/portfolio/PortfolioItem.tsx"],"sourcesContent":["import \"./PortfolioItem.css\";\n\n\ninterface FilterItemProps {\n  title: string;\n  initialClicked: boolean;\n  setCurrentFilter: React.Dispatch<React.SetStateAction<string>>;\n  currentFilter: string;\n}\n\nexport function FilterItem({\n  title,\n  initialClicked,\n  setCurrentFilter,\n  currentFilter,\n}: FilterItemProps) {\n  const [isClicked, setIsClicked] = useState(initialClicked);\n\n  return (\n    <div\n      className={\n        isClicked && currentFilter === title\n          ? \"filters-item filters-item-active\"\n          : \"filters-item\"\n      }\n      onClick={() => {\n        setCurrentFilter(title);\n        if (currentFilter !== title) {\n          setIsClicked(false);\n        }\n        setIsClicked(true);\n      }}\n    >\n      {title}\n    </div>\n  );\n}\n\n\nclass PortfolioItem {\n  title: string;\n  description: string;\n  imageUrl: string;\n  link: string;\n  filters?: string[];\n\n  constructor(\n    title: string,\n    description: string,\n    imageUrl: string,\n    link: string,\n    filters?: string[]\n  ) {\n    this.title = title;\n    this.description = description;\n    this.imageUrl = imageUrl;\n    this.link = link;\n    this.filters = [\"all\", ...filters!]; // forcing it to have 'all' filter\n  }\n\n  render(key:number) {\n    return (\n      <div key={key} className=\"portfolio-item-container\">\n        <img\n          className=\"portfolio-item-background\"\n          alt=\"portfolioItemImg\"\n          src={\n            process.env.PUBLIC_URL + \"/assets/portfolio_assets/\" + this.imageUrl\n          }\n        ></img>\n        <div>{this.title}</div>\n        <div>{this.description}</div>\n      </div>\n    );\n  }\n}\n\nexport default PortfolioItem;\n"],"mappings":";;AAAA,OAAO,qBAAqB;AAAC;AAU7B,OAAO,SAASA,UAAU,OAKN;EAAA;EAAA,IALO;IACzBC,KAAK;IACLC,cAAc;IACdC,gBAAgB;IAChBC;EACe,CAAC;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAACL,cAAc,CAAC;EAE1D,oBACE;IACE,SAAS,EACPG,SAAS,IAAID,aAAa,KAAKH,KAAK,GAChC,kCAAkC,GAClC,cACL;IACD,OAAO,EAAE,MAAM;MACbE,gBAAgB,CAACF,KAAK,CAAC;MACvB,IAAIG,aAAa,KAAKH,KAAK,EAAE;QAC3BK,YAAY,CAAC,KAAK,CAAC;MACrB;MACAA,YAAY,CAAC,IAAI,CAAC;IACpB,CAAE;IAAA,UAEDL;EAAK;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA1BeD,UAAU;AAAA,KAAVA,UAAU;AA6B1B,MAAMQ,aAAa,CAAC;EAOlBC,WAAW,CACTR,KAAa,EACbS,WAAmB,EACnBC,QAAgB,EAChBC,IAAY,EACZC,OAAkB,EAClB;IAAA,KAZFZ,KAAK;IAAA,KACLS,WAAW;IAAA,KACXC,QAAQ;IAAA,KACRC,IAAI;IAAA,KACJC,OAAO;IASL,IAAI,CAACZ,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACS,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,OAAO,GAAG,CAAC,KAAK,EAAE,GAAGA,OAAQ,CAAC,CAAC,CAAC;EACvC;;EAEAC,MAAM,CAACC,GAAU,EAAE;IACjB,oBACE;MAAe,SAAS,EAAC,0BAA0B;MAAA,wBACjD;QACE,SAAS,EAAC,2BAA2B;QACrC,GAAG,EAAC,kBAAkB;QACtB,GAAG,EACDC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,2BAA2B,GAAG,IAAI,CAACP;MAC7D;QAAA;QAAA;QAAA;MAAA,QACI,eACP;QAAA,UAAM,IAAI,CAACV;MAAK;QAAA;QAAA;QAAA;MAAA,QAAO,eACvB;QAAA,UAAM,IAAI,CAACS;MAAW;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA,GATrBK,GAAG;MAAA;MAAA;MAAA;IAAA,QAUP;EAEV;AACF;AAEA,eAAeP,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}