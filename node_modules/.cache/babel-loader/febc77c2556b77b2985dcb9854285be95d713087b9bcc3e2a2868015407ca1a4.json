{"ast":null,"code":"function decay(_ref) {\n  var _ref$keyframes = _ref.keyframes,\n    keyframes = _ref$keyframes === void 0 ? [0] : _ref$keyframes,\n    _ref$velocity = _ref.velocity,\n    velocity = _ref$velocity === void 0 ? 0 : _ref$velocity,\n    _ref$power = _ref.power,\n    power = _ref$power === void 0 ? 0.8 : _ref$power,\n    _ref$timeConstant = _ref.timeConstant,\n    timeConstant = _ref$timeConstant === void 0 ? 350 : _ref$timeConstant,\n    _ref$restDelta = _ref.restDelta,\n    restDelta = _ref$restDelta === void 0 ? 0.5 : _ref$restDelta,\n    modifyTarget = _ref.modifyTarget;\n  var origin = keyframes[0];\n  /**\n   * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n   * to reduce GC during animation.\n   */\n  var state = {\n    done: false,\n    value: origin\n  };\n  var amplitude = power * velocity;\n  var ideal = origin + amplitude;\n  var target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n  /**\n   * If the target has changed we need to re-calculate the amplitude, otherwise\n   * the animation will start from the wrong position.\n   */\n  if (target !== ideal) amplitude = target - origin;\n  return {\n    next: function next(t) {\n      var delta = -amplitude * Math.exp(-t / timeConstant);\n      state.done = !(delta > restDelta || delta < -restDelta);\n      state.value = state.done ? target : target + delta;\n      return state;\n    },\n    flipTarget: function flipTarget() {}\n  };\n}\nexport { decay };","map":{"version":3,"names":["decay","keyframes","velocity","power","timeConstant","restDelta","modifyTarget","origin","state","done","value","amplitude","ideal","target","undefined","next","t","delta","Math","exp","flipTarget"],"sources":["/Users/gowtham/Documents/GitHub/myportfolio/node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs"],"sourcesContent":["function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n"],"mappings":"AAAA,SAASA,KAAK,OAMoF;EAAA,0BAAlGC,SAAS;IAATA,SAAS,+BAAG,CAAC,CAAC,CAAC;IAAA,qBAAEC,QAAQ;IAARA,QAAQ,8BAAG,CAAC;IAAA,kBAAEC,KAAK;IAALA,KAAK,2BAAG,GAAG;IAAA,yBAAEC,YAAY;IAAZA,YAAY,kCAAG,GAAG;IAAA,sBAAEC,SAAS;IAATA,SAAS,+BAAG,GAAG;IAAEC,YAAY,QAAZA,YAAY;EACzF,IAAMC,MAAM,GAAGN,SAAS,CAAC,CAAC,CAAC;EAC3B;AACJ;AACA;AACA;EACI,IAAMO,KAAK,GAAG;IAAEC,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAEH;EAAO,CAAC;EAC5C,IAAII,SAAS,GAAGR,KAAK,GAAGD,QAAQ;EAChC,IAAMU,KAAK,GAAGL,MAAM,GAAGI,SAAS;EAChC,IAAME,MAAM,GAAGP,YAAY,KAAKQ,SAAS,GAAGF,KAAK,GAAGN,YAAY,CAACM,KAAK,CAAC;EACvE;AACJ;AACA;AACA;EACI,IAAIC,MAAM,KAAKD,KAAK,EAChBD,SAAS,GAAGE,MAAM,GAAGN,MAAM;EAC/B,OAAO;IACHQ,IAAI,EAAE,cAACC,CAAC,EAAK;MACT,IAAMC,KAAK,GAAG,CAACN,SAAS,GAAGO,IAAI,CAACC,GAAG,CAAC,CAACH,CAAC,GAAGZ,YAAY,CAAC;MACtDI,KAAK,CAACC,IAAI,GAAG,EAAEQ,KAAK,GAAGZ,SAAS,IAAIY,KAAK,GAAG,CAACZ,SAAS,CAAC;MACvDG,KAAK,CAACE,KAAK,GAAGF,KAAK,CAACC,IAAI,GAAGI,MAAM,GAAGA,MAAM,GAAGI,KAAK;MAClD,OAAOT,KAAK;IAChB,CAAC;IACDY,UAAU,EAAE,sBAAM,CAAE;EACxB,CAAC;AACL;AAEA,SAASpB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}