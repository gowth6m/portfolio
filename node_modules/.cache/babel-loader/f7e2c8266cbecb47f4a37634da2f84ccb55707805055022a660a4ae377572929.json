{"ast":null,"code":"import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n  var start = performance.now();\n  var checkElapsed = function checkElapsed(_ref) {\n    var timestamp = _ref.timestamp;\n    var elapsed = timestamp - start;\n    if (elapsed >= timeout) {\n      cancelSync.read(checkElapsed);\n      callback(elapsed - timeout);\n    }\n  };\n  sync.read(checkElapsed, true);\n  return function () {\n    return cancelSync.read(checkElapsed);\n  };\n}\nexport { delay };","map":{"version":3,"names":["sync","cancelSync","delay","callback","timeout","start","performance","now","checkElapsed","timestamp","elapsed","read"],"sources":["/Users/gowtham/Documents/GitHub/myportfolio/node_modules/framer-motion/dist/es/utils/delay.mjs"],"sourcesContent":["import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,UAAU,QAAQ,wBAAwB;;AAEzD;AACA;AACA;AACA,SAASC,KAAK,CAACC,QAAQ,EAAEC,OAAO,EAAE;EAC9B,IAAMC,KAAK,GAAGC,WAAW,CAACC,GAAG,EAAE;EAC/B,IAAMC,YAAY,GAAG,SAAfA,YAAY,OAAsB;IAAA,IAAhBC,SAAS,QAATA,SAAS;IAC7B,IAAMC,OAAO,GAAGD,SAAS,GAAGJ,KAAK;IACjC,IAAIK,OAAO,IAAIN,OAAO,EAAE;MACpBH,UAAU,CAACU,IAAI,CAACH,YAAY,CAAC;MAC7BL,QAAQ,CAACO,OAAO,GAAGN,OAAO,CAAC;IAC/B;EACJ,CAAC;EACDJ,IAAI,CAACW,IAAI,CAACH,YAAY,EAAE,IAAI,CAAC;EAC7B,OAAO;IAAA,OAAMP,UAAU,CAACU,IAAI,CAACH,YAAY,CAAC;EAAA;AAC9C;AAEA,SAASN,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}