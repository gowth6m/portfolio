{"ast":null,"code":"var _jsxFileName = \"/Users/gowtham/Documents/GitHub/myportfolio/src/components/portfolio/Portfolio.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./Portfolio.css\";\nimport PortfolioItem from \"./PortfolioItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Portfolio() {\n  _s();\n  let items = [];\n  let filters = [\"all\", \"web\", \"mobile\", \"game\", \"other\"];\n  const [currentFilter, setCurrentFilter] = useState(new Set([\"all\"]));\n  for (let i = 0; i < 10; i++) {\n    items.push(new PortfolioItem(i, \"item \" + i, \"description\", \"imageUrl\", \"link\", [\"web\", \"game\", \"all\"]));\n  }\n  const filterByReference = (set, list) => {\n    let result = [...set].every(item => list.includes(item));\n    for (let i = 0; i < set.size;) return result;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"portfolio-page flex\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portfolio-page-container screen-max\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"portfolio-title section-title\",\n        children: [\"Portfolio \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters-container flex\",\n        children: filters.map(filter => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filters-item\",\n          onClick: () => {\n            console.log(filter);\n            setCurrentFilter(currentFilter.add(filter));\n            console.log(\"current filters: \", currentFilter);\n          },\n          children: filter\n        }, filter, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"portfolio-items-container\",\n        children:\n        // items.filter((item) => item.filters?.includes(currentFilter))\n        // items.filter((x) => currentFilter.indexOf(x.filters?) < 0)\n        filterByReference(items, currentFilter).map(item => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"portfolio-item\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"portfolio-item-image\",\n              children: item.display()\n            }, item.title, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this)\n          }, item.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Portfolio, \"T1r3vbueWk51SnDcKWShNAYWREE=\");\n_c = Portfolio;\nvar _c;\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"names":["useState","PortfolioItem","Portfolio","items","filters","currentFilter","setCurrentFilter","Set","i","push","filterByReference","set","list","result","every","item","includes","size","map","filter","console","log","add","display","title","key"],"sources":["/Users/gowtham/Documents/GitHub/myportfolio/src/components/portfolio/Portfolio.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"./Portfolio.css\";\nimport PortfolioItem from \"./PortfolioItem\";\n\nexport function Portfolio() {\n  let items: PortfolioItem[] = [];\n  let filters: string[] = [\"all\", \"web\", \"mobile\", \"game\", \"other\"];\n  const [currentFilter, setCurrentFilter] = useState(new Set([\"all\"]));\n\n  for (let i = 0; i < 10; i++) {\n    items.push(\n      new PortfolioItem(i, \"item \" + i, \"description\", \"imageUrl\", \"link\", [\n        \"web\",\n        \"game\",\n        \"all\",\n      ])\n    );\n  }\n\n  const filterByReference = (set:Set<string>, list: string[]) => {\n    let result = [...set].every(item => list.includes(item));\n\n    for(let i=0; i < set.size; )\n\n    return result;\n  };\n\n  return (\n    <div className=\"portfolio-page flex\">\n      <div className=\"portfolio-page-container screen-max\">\n        <div className=\"portfolio-title section-title\">\n          Portfolio <span>.</span>\n        </div>\n\n        <div className=\"filters-container flex\">\n          {filters.map((filter) => (\n            <div\n              key={filter}\n              className=\"filters-item\"\n              onClick={() => {\n                console.log(filter);\n                setCurrentFilter(currentFilter.add(filter));\n                console.log(\"current filters: \",currentFilter);\n              }}\n            >\n              {filter}\n            </div>\n          ))}\n        </div>\n\n        {/* rest of the stuff */}\n\n        <div className=\"portfolio-items-container\">\n          {\n            // items.filter((item) => item.filters?.includes(currentFilter))\n            // items.filter((x) => currentFilter.indexOf(x.filters?) < 0)\n            filterByReference(items, currentFilter).map((item) => {\n              return (\n                <div key={item.key} className=\"portfolio-item\">\n                  <div key={item.title} className=\"portfolio-item-image\">\n                    {item.display()}\n                  </div>\n                </div>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,iBAAiB;AACxB,OAAOC,aAAa,MAAM,iBAAiB;AAAC;AAE5C,OAAO,SAASC,SAAS,GAAG;EAAA;EAC1B,IAAIC,KAAsB,GAAG,EAAE;EAC/B,IAAIC,OAAiB,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC;EACjE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,IAAIO,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;EAEpE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC3BL,KAAK,CAACM,IAAI,CACR,IAAIR,aAAa,CAACO,CAAC,EAAE,OAAO,GAAGA,CAAC,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,EAAE,CACnE,KAAK,EACL,MAAM,EACN,KAAK,CACN,CAAC,CACH;EACH;EAEA,MAAME,iBAAiB,GAAG,CAACC,GAAe,EAAEC,IAAc,KAAK;IAC7D,IAAIC,MAAM,GAAG,CAAC,GAAGF,GAAG,CAAC,CAACG,KAAK,CAACC,IAAI,IAAIH,IAAI,CAACI,QAAQ,CAACD,IAAI,CAAC,CAAC;IAExD,KAAI,IAAIP,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAGG,GAAG,CAACM,IAAI,GAEzB,OAAOJ,MAAM;EACf,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,qBAAqB;IAAA,uBAClC;MAAK,SAAS,EAAC,qCAAqC;MAAA,wBAClD;QAAK,SAAS,EAAC,+BAA+B;QAAA,sCAClC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAc;MAAA;QAAA;QAAA;QAAA;MAAA,QACpB,eAEN;QAAK,SAAS,EAAC,wBAAwB;QAAA,UACpCT,OAAO,CAACc,GAAG,CAAEC,MAAM,iBAClB;UAEE,SAAS,EAAC,cAAc;UACxB,OAAO,EAAE,MAAM;YACbC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;YACnBb,gBAAgB,CAACD,aAAa,CAACiB,GAAG,CAACH,MAAM,CAAC,CAAC;YAC3CC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAChB,aAAa,CAAC;UAChD,CAAE;UAAA,UAEDc;QAAM,GARFA,MAAM;UAAA;UAAA;UAAA;QAAA,QAUd;MAAC;QAAA;QAAA;QAAA;MAAA,QACE,eAIN;QAAK,SAAS,EAAC,2BAA2B;QAAA;QAEtC;QACA;QACAT,iBAAiB,CAACP,KAAK,EAAEE,aAAa,CAAC,CAACa,GAAG,CAAEH,IAAI,IAAK;UACpD,oBACE;YAAoB,SAAS,EAAC,gBAAgB;YAAA,uBAC5C;cAAsB,SAAS,EAAC,sBAAsB;cAAA,UACnDA,IAAI,CAACQ,OAAO;YAAE,GADPR,IAAI,CAACS,KAAK;cAAA;cAAA;cAAA;YAAA;UAEd,GAHET,IAAI,CAACU,GAAG;YAAA;YAAA;YAAA;UAAA,QAIZ;QAEV,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAEA;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAlEevB,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}